on: [workflow_dispatch]
name: Ummm

jobs:
   foo:
     runs-on: ubuntu-latest
     steps:
      - name: Make GitHub Release
        env:
          RELEASE_TAG: release_2.18.0.dev5
          GH_TOKEN: ${{ secrets.GHTOK }}
          GH_REPO: pantsbuild/pants
        run: "RELEASE_VERSION=\"${RELEASE_TAG#release_}\"\n\n# NB: This could be a re-run of a release, in\
           \ the event a job/step failed.\nif ! gh release view $RELEASE_TAG ; then\n\
           \    GH_RELEASE_ARGS=(\"--notes\" \"\")\n    GH_RELEASE_ARGS+=(\"--title\"\
           \ \"$RELEASE_TAG\")\n    if [[ $RELEASE_VERSION =~ [[:alpha:]] ]]; then\n\
           \        GH_RELEASE_ARGS+=(\"--prerelease\")\n        GH_RELEASE_ARGS+=(\"\
           --latest=false\")\n    else\n        STABLE_RELEASE_TAGS=$(gh api -X GET -F\
           \ per_page=100 /repos/{owner}/{repo}/releases --jq '.[].tag_name | sub(\"\
           ^release_\"; \"\") | select(test(\"^[0-9.]+$\"))')\n        LATEST_TAG=$(echo\
           \ \"$STABLE_RELEASE_TAGS $RELEASE_TAG\" | tr ' ' '\\n' | sort --version-sort\
           \ | tail -n 1)\n        if [[ $RELEASE_TAG == $LATEST_TAG ]]; then\n     \
           \       GH_RELEASE_ARGS+=(\"--latest=true\")\n        else\n            GH_RELEASE_ARGS+=(\"\
           --latest=false\")\n        fi\n    fi\n\n    gh release create \"$RELEASE_TAG\"\
           \ \"${GH_RELEASE_ARGS[@]}\" --draft\nfi\n\nASSET_UPLOAD_URL=$(gh release view\
           \ \"$RELEASE_TAG\" --json uploadUrl --jq '.uploadUrl | sub(\"\\\\{\\\\?.*$\"\
           ; \"\")')\necho \"release-asset-upload-url=$ASSET_UPLOAD_URL\" >> $GITHUB_OUTPUT\n"
